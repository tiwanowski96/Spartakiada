# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-07-18 08:48
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Duel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points1', models.IntegerField(null=True)),
                ('points2', models.IntegerField(null=True)),
                ('lap', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Partaker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Participation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('partaker', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='spartakiada.Partaker')),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='PlayerCache',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('won', models.IntegerField(null=True)),
                ('played', models.IntegerField(null=True)),
                ('tournament_won', models.IntegerField(null=True)),
                ('tournament_second', models.IntegerField(null=True)),
                ('tournament_participated', models.IntegerField(null=True)),
                ('partaker', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='spartakiada.Partaker')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('mates', models.ManyToManyField(through='spartakiada.Member', to='spartakiada.Player')),
            ],
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('individual', models.BooleanField(default=True)),
                ('cup', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='spartakiada.Cup')),
                ('game', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='spartakiada.Game')),
                ('participants', models.ManyToManyField(through='spartakiada.Participation', to='spartakiada.Partaker')),
            ],
        ),
        migrations.AddField(
            model_name='participation',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spartakiada.Tournament'),
        ),
        migrations.AddField(
            model_name='partaker',
            name='player',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='spartakiada.Player'),
        ),
        migrations.AddField(
            model_name='partaker',
            name='team',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='spartakiada.Team'),
        ),
        migrations.AddField(
            model_name='member',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spartakiada.Player'),
        ),
        migrations.AddField(
            model_name='member',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spartakiada.Team'),
        ),
        migrations.AddField(
            model_name='duel',
            name='player1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_played', to='spartakiada.Participation'),
        ),
        migrations.AddField(
            model_name='duel',
            name='player2',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_played2', to='spartakiada.Participation'),
        ),
        migrations.AddField(
            model_name='duel',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spartakiada.Tournament'),
        ),
        migrations.AlterUniqueTogether(
            name='cup',
            unique_together=set([('name', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='tournament',
            unique_together=set([('cup', 'game', 'individual')]),
        ),
    ]
